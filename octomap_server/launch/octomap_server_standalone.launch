<!--
  Example launch file for octomap_server mapping:
  Listens to incoming PointCloud2 data and incrementally builds an octomap.
  The data is sent out in different representations.

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details
-->
<launch>
    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">

        <param name="map_file" value="/home/urock/work/fastsense/octomap_exp/data/fr_079.bt" />
        <param name="resolution" value="0.05" />

        <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
        <param name="frame_id" type="string" value="map" />

        <!-- maximum range to integrate (speedup!) -->
        <!--<param name="sensor_model/max_range" value="5.0" />-->
        <!-- max range / depth resolution of the kinect in meter -->
        <param name="sensor_model/max_range" value="10.0" />
        <param name="latch" value="true" />
        <param name="occupancy_min_z" value="0.5" />
        <param name="occupancy_max_z" value="1" />


        <!-- max/min height for occupancy map, should be in meters -->
        <param name="pointcloud_max_z" value="10" />
        <param name="pointcloud_min_z" value="0" />

        <!-- data source to integrate (PointCloud2) -->
        <remap from="cloud_in" to="firefly/vi_sensor/camera_depth/depth/points" />

    </node>
</launch>